/**
 * solo esta editanto un solo permiso
 */
package VISTA;

import MODELO.Permisos;
import MODELO.RolUsuario;
import MODELO.Usuario;
import MODELO_CONTROLADOR.MC_Permisos;
import MODELO_CONTROLADOR.MC_RolUsuario;
import MODELO_CONTROLADOR.funciones;
import com.toedter.calendar.JCalendar;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 * Funciones De La ventanaRoles obtenerElementos -> obtener la informacion de la
 * caja de texto de la ventana obtenerElementosPermisos -> obtener los permisos
 * que se le otorgo al rol del usuario mostrarElementos -> mostrar la
 * informacion en las cajas de texto de la vetana.
 */
public class ventanaRoles extends javax.swing.JDialog {

    /**
     * Variable Caso 0 = No Hay Problemas 1 = Nombre De Rol Vacio
     */
    private int caso = 0;
    //Usuario Para El Campo De Usuario Id De La Clase RoleUsuario
    private Usuario usuario;
    //Variable usada para almacenar informacion obtenidad de las cajas de texto de la ventana
    private RolUsuario rolUsuario;
    //Variable con el nombre de la tabla de la base de datos que corresponde a esta ventana
    private final String nombreTabla = "Rol";
    //Lista de permisos que se va a editar de un rol
    private List<Permisos> permisosRol = new ArrayList<>();

    public ventanaRoles(javax.swing.JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();

        this.setSize(552, 575);

        entUsuario.setEditable(false);

        JCalendar calendario = entFechaRegistro.getJCalendar();
        calendario.setWeekOfYearVisible(false);
        calendario.setMaxDayCharacters(2);
        entFechaRegistro.setDate(funciones.fecha());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        entUsuario = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        entRol = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        entFechaRegistro = new com.toedter.calendar.JDateChooser();
        fondoPermisos = new javax.swing.JPanel();
        fondoEmpleado = new javax.swing.JPanel();
        btnEmpleado = new javax.swing.JRadioButton();
        btnEmpleadoInsertar = new javax.swing.JRadioButton();
        btnEmpleadoEditar = new javax.swing.JRadioButton();
        btnEmpleadoVer = new javax.swing.JRadioButton();
        jSeparator9 = new javax.swing.JSeparator();
        fondoCliente = new javax.swing.JPanel();
        btnCliente = new javax.swing.JRadioButton();
        btnClienteInsertar = new javax.swing.JRadioButton();
        btnClienteEditar = new javax.swing.JRadioButton();
        btnClienteVer = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        fondoLibro = new javax.swing.JPanel();
        btnLibro = new javax.swing.JRadioButton();
        btnLibroInsertar = new javax.swing.JRadioButton();
        btnLibroEditar = new javax.swing.JRadioButton();
        btnLibroVer = new javax.swing.JRadioButton();
        jSeparator5 = new javax.swing.JSeparator();
        fondoOrdenPrestamo = new javax.swing.JPanel();
        btnOrdenPrestamo = new javax.swing.JRadioButton();
        btnOrdenPrestamoInsertar = new javax.swing.JRadioButton();
        btnOrdenPrestamoEditar = new javax.swing.JRadioButton();
        btnOrdenPrestamoVer = new javax.swing.JRadioButton();
        jSeparator7 = new javax.swing.JSeparator();
        fondoUsuario = new javax.swing.JPanel();
        btnUsuario = new javax.swing.JRadioButton();
        btnUsuarioInsertar = new javax.swing.JRadioButton();
        btnUsuarioEditar = new javax.swing.JRadioButton();
        btnUsuarioVer = new javax.swing.JRadioButton();
        jSeparator3 = new javax.swing.JSeparator();
        fondoRoles = new javax.swing.JPanel();
        btnRoles = new javax.swing.JRadioButton();
        btnRolesInsertar = new javax.swing.JRadioButton();
        btnRolesEditar = new javax.swing.JRadioButton();
        btnRolesVer = new javax.swing.JRadioButton();
        jSeparator4 = new javax.swing.JSeparator();
        fondoGenero = new javax.swing.JPanel();
        btnGenero = new javax.swing.JRadioButton();
        btnGeneroInsertar = new javax.swing.JRadioButton();
        btnGeneroEditar = new javax.swing.JRadioButton();
        btnGeneroVer = new javax.swing.JRadioButton();
        jSeparator8 = new javax.swing.JSeparator();
        fondoOrdenCompra = new javax.swing.JPanel();
        btnOrdenCompra = new javax.swing.JRadioButton();
        btnOrdenCompraInsertar = new javax.swing.JRadioButton();
        btnOrdenCompraEditar = new javax.swing.JRadioButton();
        btnOrdenCompraVer = new javax.swing.JRadioButton();
        jSeparator6 = new javax.swing.JSeparator();
        foto = new javax.swing.JLabel();
        btnEditar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setSize(new java.awt.Dimension(600, 600));
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel1.setLayout(null);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setText("Usuario");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(190, 20, 70, 30);

        entUsuario.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(entUsuario);
        entUsuario.setBounds(250, 20, 195, 30);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setText("Rol");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(190, 60, 40, 30);

        entRol.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(entRol);
        entRol.setBounds(220, 60, 225, 30);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel8.setText("Fecha Registro ");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(190, 100, 120, 30);

        entFechaRegistro.setBackground(new java.awt.Color(255, 255, 255));
        entFechaRegistro.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jPanel1.add(entFechaRegistro);
        entFechaRegistro.setBounds(300, 100, 145, 30);

        fondoPermisos.setBackground(new java.awt.Color(204, 204, 204));
        fondoPermisos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        fondoPermisos.setLayout(null);

        fondoEmpleado.setBackground(new java.awt.Color(204, 204, 204));
        fondoEmpleado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        fondoEmpleado.setLayout(null);

        btnEmpleado.setBackground(new java.awt.Color(204, 204, 204));
        btnEmpleado.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnEmpleado.setText("Empleado");
        fondoEmpleado.add(btnEmpleado);
        btnEmpleado.setBounds(5, 5, 100, 30);

        btnEmpleadoInsertar.setBackground(new java.awt.Color(204, 204, 204));
        btnEmpleadoInsertar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnEmpleadoInsertar.setText("Insertar");
        fondoEmpleado.add(btnEmpleadoInsertar);
        btnEmpleadoInsertar.setBounds(5, 45, 80, 30);

        btnEmpleadoEditar.setBackground(new java.awt.Color(204, 204, 204));
        btnEmpleadoEditar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnEmpleadoEditar.setText("Editar");
        fondoEmpleado.add(btnEmpleadoEditar);
        btnEmpleadoEditar.setBounds(5, 80, 80, 30);

        btnEmpleadoVer.setBackground(new java.awt.Color(204, 204, 204));
        btnEmpleadoVer.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnEmpleadoVer.setText("Ver");
        fondoEmpleado.add(btnEmpleadoVer);
        btnEmpleadoVer.setBounds(5, 115, 80, 30);
        fondoEmpleado.add(jSeparator9);
        jSeparator9.setBounds(4, 40, 110, 2);

        fondoPermisos.add(fondoEmpleado);
        fondoEmpleado.setBounds(10, 30, 120, 155);

        fondoCliente.setBackground(new java.awt.Color(204, 204, 204));
        fondoCliente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        fondoCliente.setLayout(null);

        btnCliente.setBackground(new java.awt.Color(204, 204, 204));
        btnCliente.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnCliente.setText("Cliente");
        fondoCliente.add(btnCliente);
        btnCliente.setBounds(5, 5, 80, 30);

        btnClienteInsertar.setBackground(new java.awt.Color(204, 204, 204));
        btnClienteInsertar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnClienteInsertar.setText("Insertar");
        fondoCliente.add(btnClienteInsertar);
        btnClienteInsertar.setBounds(5, 45, 80, 30);

        btnClienteEditar.setBackground(new java.awt.Color(204, 204, 204));
        btnClienteEditar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnClienteEditar.setText("Editar");
        fondoCliente.add(btnClienteEditar);
        btnClienteEditar.setBounds(5, 80, 80, 30);

        btnClienteVer.setBackground(new java.awt.Color(204, 204, 204));
        btnClienteVer.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnClienteVer.setText("Ver");
        fondoCliente.add(btnClienteVer);
        btnClienteVer.setBounds(5, 115, 80, 30);
        fondoCliente.add(jSeparator1);
        jSeparator1.setBounds(5, 40, 110, 2);

        fondoPermisos.add(fondoCliente);
        fondoCliente.setBounds(135, 30, 120, 155);

        fondoLibro.setBackground(new java.awt.Color(204, 204, 204));
        fondoLibro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        fondoLibro.setLayout(null);

        btnLibro.setBackground(new java.awt.Color(204, 204, 204));
        btnLibro.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnLibro.setText("Libros");
        fondoLibro.add(btnLibro);
        btnLibro.setBounds(5, 5, 80, 30);

        btnLibroInsertar.setBackground(new java.awt.Color(204, 204, 204));
        btnLibroInsertar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnLibroInsertar.setText("Insertar");
        fondoLibro.add(btnLibroInsertar);
        btnLibroInsertar.setBounds(5, 45, 80, 30);

        btnLibroEditar.setBackground(new java.awt.Color(204, 204, 204));
        btnLibroEditar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnLibroEditar.setText("Editar");
        fondoLibro.add(btnLibroEditar);
        btnLibroEditar.setBounds(5, 80, 80, 30);

        btnLibroVer.setBackground(new java.awt.Color(204, 204, 204));
        btnLibroVer.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnLibroVer.setText("Ver");
        fondoLibro.add(btnLibroVer);
        btnLibroVer.setBounds(5, 115, 80, 30);
        fondoLibro.add(jSeparator5);
        jSeparator5.setBounds(4, 40, 80, 2);

        fondoPermisos.add(fondoLibro);
        fondoLibro.setBounds(260, 30, 90, 155);

        fondoOrdenPrestamo.setBackground(new java.awt.Color(204, 204, 204));
        fondoOrdenPrestamo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        fondoOrdenPrestamo.setLayout(null);

        btnOrdenPrestamo.setBackground(new java.awt.Color(204, 204, 204));
        btnOrdenPrestamo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnOrdenPrestamo.setText("Orden Prestamo");
        fondoOrdenPrestamo.add(btnOrdenPrestamo);
        btnOrdenPrestamo.setBounds(5, 5, 143, 30);

        btnOrdenPrestamoInsertar.setBackground(new java.awt.Color(204, 204, 204));
        btnOrdenPrestamoInsertar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnOrdenPrestamoInsertar.setText("Insertar");
        fondoOrdenPrestamo.add(btnOrdenPrestamoInsertar);
        btnOrdenPrestamoInsertar.setBounds(5, 45, 80, 30);

        btnOrdenPrestamoEditar.setBackground(new java.awt.Color(204, 204, 204));
        btnOrdenPrestamoEditar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnOrdenPrestamoEditar.setText("Editar");
        fondoOrdenPrestamo.add(btnOrdenPrestamoEditar);
        btnOrdenPrestamoEditar.setBounds(5, 80, 80, 30);

        btnOrdenPrestamoVer.setBackground(new java.awt.Color(204, 204, 204));
        btnOrdenPrestamoVer.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnOrdenPrestamoVer.setText("Ver");
        fondoOrdenPrestamo.add(btnOrdenPrestamoVer);
        btnOrdenPrestamoVer.setBounds(5, 115, 80, 30);
        fondoOrdenPrestamo.add(jSeparator7);
        jSeparator7.setBounds(5, 40, 110, 2);

        fondoPermisos.add(fondoOrdenPrestamo);
        fondoOrdenPrestamo.setBounds(355, 30, 150, 155);

        fondoUsuario.setBackground(new java.awt.Color(204, 204, 204));
        fondoUsuario.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        fondoUsuario.setLayout(null);

        btnUsuario.setBackground(new java.awt.Color(204, 204, 204));
        btnUsuario.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnUsuario.setText("Usuario");
        fondoUsuario.add(btnUsuario);
        btnUsuario.setBounds(5, 5, 90, 30);

        btnUsuarioInsertar.setBackground(new java.awt.Color(204, 204, 204));
        btnUsuarioInsertar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnUsuarioInsertar.setText("Insertar");
        fondoUsuario.add(btnUsuarioInsertar);
        btnUsuarioInsertar.setBounds(5, 45, 80, 30);

        btnUsuarioEditar.setBackground(new java.awt.Color(204, 204, 204));
        btnUsuarioEditar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnUsuarioEditar.setText("Editar");
        fondoUsuario.add(btnUsuarioEditar);
        btnUsuarioEditar.setBounds(5, 80, 80, 30);

        btnUsuarioVer.setBackground(new java.awt.Color(204, 204, 204));
        btnUsuarioVer.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnUsuarioVer.setText("Ver");
        fondoUsuario.add(btnUsuarioVer);
        btnUsuarioVer.setBounds(5, 115, 80, 30);
        fondoUsuario.add(jSeparator3);
        jSeparator3.setBounds(4, 40, 110, 2);

        fondoPermisos.add(fondoUsuario);
        fondoUsuario.setBounds(10, 195, 120, 155);

        fondoRoles.setBackground(new java.awt.Color(204, 204, 204));
        fondoRoles.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        fondoRoles.setLayout(null);

        btnRoles.setBackground(new java.awt.Color(204, 204, 204));
        btnRoles.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnRoles.setText("Roles");
        fondoRoles.add(btnRoles);
        btnRoles.setBounds(5, 5, 80, 30);

        btnRolesInsertar.setBackground(new java.awt.Color(204, 204, 204));
        btnRolesInsertar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnRolesInsertar.setText("Insertar");
        fondoRoles.add(btnRolesInsertar);
        btnRolesInsertar.setBounds(5, 45, 80, 30);

        btnRolesEditar.setBackground(new java.awt.Color(204, 204, 204));
        btnRolesEditar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnRolesEditar.setText("Editar");
        fondoRoles.add(btnRolesEditar);
        btnRolesEditar.setBounds(5, 80, 80, 30);

        btnRolesVer.setBackground(new java.awt.Color(204, 204, 204));
        btnRolesVer.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnRolesVer.setText("Ver");
        fondoRoles.add(btnRolesVer);
        btnRolesVer.setBounds(5, 115, 80, 30);
        fondoRoles.add(jSeparator4);
        jSeparator4.setBounds(4, 40, 110, 2);

        fondoPermisos.add(fondoRoles);
        fondoRoles.setBounds(135, 195, 120, 155);

        fondoGenero.setBackground(new java.awt.Color(204, 204, 204));
        fondoGenero.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        fondoGenero.setLayout(null);

        btnGenero.setBackground(new java.awt.Color(204, 204, 204));
        btnGenero.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnGenero.setText("Genero");
        fondoGenero.add(btnGenero);
        btnGenero.setBounds(5, 5, 80, 30);

        btnGeneroInsertar.setBackground(new java.awt.Color(204, 204, 204));
        btnGeneroInsertar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnGeneroInsertar.setText("Insertar");
        fondoGenero.add(btnGeneroInsertar);
        btnGeneroInsertar.setBounds(5, 45, 80, 30);

        btnGeneroEditar.setBackground(new java.awt.Color(204, 204, 204));
        btnGeneroEditar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnGeneroEditar.setText("Editar");
        fondoGenero.add(btnGeneroEditar);
        btnGeneroEditar.setBounds(5, 80, 80, 30);

        btnGeneroVer.setBackground(new java.awt.Color(204, 204, 204));
        btnGeneroVer.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnGeneroVer.setText("Ver");
        fondoGenero.add(btnGeneroVer);
        btnGeneroVer.setBounds(5, 115, 80, 30);
        fondoGenero.add(jSeparator8);
        jSeparator8.setBounds(4, 40, 80, 2);

        fondoPermisos.add(fondoGenero);
        fondoGenero.setBounds(260, 195, 90, 155);

        fondoOrdenCompra.setBackground(new java.awt.Color(204, 204, 204));
        fondoOrdenCompra.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        fondoOrdenCompra.setLayout(null);

        btnOrdenCompra.setBackground(new java.awt.Color(204, 204, 204));
        btnOrdenCompra.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnOrdenCompra.setText("Orden Compra");
        fondoOrdenCompra.add(btnOrdenCompra);
        btnOrdenCompra.setBounds(5, 5, 133, 30);

        btnOrdenCompraInsertar.setBackground(new java.awt.Color(204, 204, 204));
        btnOrdenCompraInsertar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnOrdenCompraInsertar.setText("Insertar");
        fondoOrdenCompra.add(btnOrdenCompraInsertar);
        btnOrdenCompraInsertar.setBounds(5, 45, 80, 30);

        btnOrdenCompraEditar.setBackground(new java.awt.Color(204, 204, 204));
        btnOrdenCompraEditar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnOrdenCompraEditar.setText("Editar");
        fondoOrdenCompra.add(btnOrdenCompraEditar);
        btnOrdenCompraEditar.setBounds(5, 80, 80, 30);

        btnOrdenCompraVer.setBackground(new java.awt.Color(204, 204, 204));
        btnOrdenCompraVer.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnOrdenCompraVer.setText("Ver");
        fondoOrdenCompra.add(btnOrdenCompraVer);
        btnOrdenCompraVer.setBounds(5, 115, 80, 30);
        fondoOrdenCompra.add(jSeparator6);
        jSeparator6.setBounds(4, 40, 125, 2);

        fondoPermisos.add(fondoOrdenCompra);
        fondoOrdenCompra.setBounds(355, 195, 150, 155);

        jPanel1.add(fondoPermisos);
        fondoPermisos.setBounds(10, 155, 515, 370);

        foto.setBackground(new java.awt.Color(153, 153, 153));
        foto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/rol175x140.png"))); // NOI18N
        foto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(foto);
        foto.setBounds(10, 10, 175, 140);

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/editar65x65.png"))); // NOI18N
        btnEditar.setMnemonic('E');
        btnEditar.setToolTipText("Editar Informacion Del rol");
        btnEditar.setBorderPainted(false);
        btnEditar.setContentAreaFilled(false);
        btnEditar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/editar70x70.png"))); // NOI18N
        btnEditar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/editar70x70.png"))); // NOI18N
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEditar);
        btnEditar.setBounds(450, 5, 70, 70);

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/guardar65x65.png"))); // NOI18N
        btnGuardar.setMnemonic('G');
        btnGuardar.setToolTipText("Guardar Informacion Del Rol ");
        btnGuardar.setBorderPainted(false);
        btnGuardar.setContentAreaFilled(false);
        btnGuardar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/guardar70x70.png"))); // NOI18N
        btnGuardar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/guardar70x70.png"))); // NOI18N
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar);
        btnGuardar.setBounds(450, 80, 70, 70);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(3, 3, 530, 530);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        rolUsuario = new RolUsuario();
        obtenerElementos();
        List<Permisos> permisos = obtenerElementoPermisos();
        switch (caso) {
            case 0:
                if (JOptionPane.showConfirmDialog(this, "Guardar Rol", "Escudo", 1, 3, null) == 0) {

                    MC_RolUsuario control = new MC_RolUsuario();
                    if (control.nuevoRolUsuario(rolUsuario)) {

                        MC_Permisos controlPermisos = new MC_Permisos();
                        for (Permisos permisosR : permisos) {
                            permisosR.setRolUsuarioId(rolUsuario);
                            controlPermisos.nuevoPermiso(permisosR);
                        }
                        controlPermisos.close();

                        JOptionPane.showMessageDialog(this, "Rol Guardado", "Informacion", 1, null);
                        this.setVisible(false);
                    }
                }
                break;
            case 1:
                JOptionPane.showMessageDialog(this, "El Campo Rol No Puede Quedar Vacio", "Error", 0, null);
                caso = 0;
                break;
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        obtenerElementos();
        List<Permisos> permisos = obtenerElementoPermisos();
        
        switch (caso) {
            case 0:
                if (JOptionPane.showConfirmDialog(this, "Editar Rol", "Escudo", 1, 3, null) == 0) {
                    MC_RolUsuario controlRol = new MC_RolUsuario();
                    //validar si el rol de usuario se edito
                    if (controlRol.editarRolUsuario(rolUsuario)) {
                        MC_Permisos controlPermiso = new MC_Permisos();
                        if (!permisosRol.isEmpty()) {
                            //Lista de permisos a editar no esta vacia    
                            for (Permisos permisoRolU : permisosRol) {
                                Permisos permiso = buscarRol(permisos, permisoRolU.getNombreTabla());
                                //Caso cunado se quita o modifica el permiso a un rol Existente
                                if (permiso == null || permiso.getNombreTabla().isEmpty()) {
                                    controlPermiso.borrarPermiso(permisoRolU.getIdpermisos());
                                } else {
                                    permisoRolU.setNombreTabla(permiso.getNombreTabla());
                                    permisoRolU.setInsertar(permiso.getInsertar());
                                    permisoRolU.setEditar(permiso.getEditar());
                                    permisoRolU.setVer(permiso.getVer());
                                    permisoRolU.setBorrar(permiso.getBorrar());
                                    controlPermiso.editarPermiso(permisoRolU);
                                }
                            }
                        }
                        //manejo cuando se otorga otro permisos nuevo
                        for (Permisos permisoRolU : permisos) {
                            permisoRolU.setRolUsuarioId(rolUsuario);
                            controlPermiso.nuevoPermiso(permisoRolU);
                        }
                        controlPermiso.close();
                        JOptionPane.showMessageDialog(this, "Rol Editado", "Informacion", 1, null);
                        this.setVisible(false);
                    }
                }
                break;
            case 1:
                JOptionPane.showMessageDialog(this, "El Campo Rol No Puede Quedar Vacio", "Error", 0, null);
                caso = 0;
                break;
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    public Permisos buscarRol(List<Permisos> parametroRolesUsuario, String parametroNombreTabla) {
        Permisos rolU = null;
        for (int i = 0; i < parametroRolesUsuario.size(); i++) {
            if (parametroRolesUsuario.get(i).getNombreTabla().equals(parametroNombreTabla)) {
                rolU = parametroRolesUsuario.get(i);
                parametroRolesUsuario.remove(i);
            }
        }
        return rolU;
    }

    public void obtenerElementos() {
        String rol = entRol.getText();
        rolUsuario.setFechacreacion(entFechaRegistro.getDate());
        if (rol == null || rol.isEmpty()) {
            caso = 1;
        } else {
            rolUsuario.setNombrerol(rol);
        }
        rolUsuario.setUsuarioId(usuario);
    }

    public List<Permisos> obtenerElementoPermisos() {
        List<Permisos> permisosRolUsuario = new ArrayList<>();
        boolean cliente = btnCliente.isSelected();
        boolean empleado = btnEmpleado.isSelected();
        boolean usuarioA = btnUsuario.isSelected();
        boolean libro = btnLibro.isSelected();
        boolean ordenCompra = btnOrdenCompra.isSelected();
        boolean ordenPrestamo = btnOrdenPrestamo.isSelected();
        boolean roles = btnRoles.isSelected();
        boolean genero = btnGenero.isSelected();

        if (cliente) {
            Permisos permisoCliente = new Permisos("Cliente", btnClienteVer.isSelected(), btnClienteInsertar.isSelected(),
                    btnClienteEditar.isSelected(), false);
            permisosRolUsuario.add(permisoCliente);
        }
        if (empleado) {
            Permisos permisoEmpleado = new Permisos("Empleado", btnEmpleadoVer.isSelected(), btnEmpleadoInsertar.isSelected(),
                    btnEmpleadoEditar.isSelected(), false);
            permisosRolUsuario.add(permisoEmpleado);
        }
        if (usuarioA) {
            Permisos permisoUsuario = new Permisos("Usuario", btnUsuarioVer.isSelected(), btnUsuarioInsertar.isSelected(),
                    btnUsuarioEditar.isSelected(), false);
            permisosRolUsuario.add(permisoUsuario);
        }
        if (libro) {
            Permisos permisoLibro = new Permisos("Libro", btnLibroVer.isSelected(), btnLibroInsertar.isSelected(),
                    btnLibroEditar.isSelected(), false);
            permisosRolUsuario.add(permisoLibro);
        }
        if (ordenCompra) {
            Permisos permisoOrdenCompra = new Permisos("OrdenCompra", btnOrdenCompraVer.isSelected(), btnOrdenCompraInsertar.isSelected(),
                    btnOrdenCompraEditar.isSelected(), false);
            permisosRolUsuario.add(permisoOrdenCompra);
        }
        if (ordenPrestamo) {
            Permisos permisoOrdenPrestamo = new Permisos("OrdenPrestamo", btnOrdenPrestamoVer.isSelected(), btnOrdenPrestamoInsertar.isSelected(),
                    btnOrdenPrestamoEditar.isSelected(), false);
            permisosRolUsuario.add(permisoOrdenPrestamo);
        }
        if (roles) {
            Permisos permisoRol = new Permisos("Rol", btnRolesVer.isSelected(), btnRolesInsertar.isSelected(),
                    btnRolesEditar.isSelected(), false);
            permisosRolUsuario.add(permisoRol);
        }
        if (genero) {
            Permisos permisoGenero = new Permisos("Genero", btnGeneroVer.isSelected(), btnGeneroInsertar.isSelected(),
                    btnGeneroEditar.isSelected(), false);
            permisosRolUsuario.add(permisoGenero);
        }
        return permisosRolUsuario;
    }

    public void mostrarPermisos(List<Permisos> permisos) {
        permisosRol = new ArrayList<>();
        if (permisos != null && !permisos.isEmpty()) {
            permisosRol = permisos;
            for (Permisos permisosRolU : permisos) {
                String nombre = permisosRolU.getNombreTabla();
                if (nombre == null || nombre.isEmpty()) {
                    nombre = "b";
                }
                switch (nombre) {
                    case "Cliente":
                        btnCliente.setSelected(true);
                        btnClienteInsertar.setSelected(permisosRolU.getInsertar());
                        btnClienteEditar.setSelected(permisosRolU.getEditar());
                        btnClienteVer.setSelected(permisosRolU.getVer());
                        break;
                    case "Empleado":
                        btnEmpleado.setSelected(true);
                        btnEmpleadoInsertar.setSelected(permisosRolU.getInsertar());
                        btnEmpleadoEditar.setSelected(permisosRolU.getEditar());
                        btnEmpleadoVer.setSelected(permisosRolU.getVer());
                        break;
                    case "Libro":
                        btnLibro.setSelected(true);
                        btnLibroInsertar.setSelected(permisosRolU.getInsertar());
                        btnLibroEditar.setSelected(permisosRolU.getEditar());
                        btnLibroVer.setSelected(permisosRolU.getVer());
                        break;
                    case "OrdenPrestamo":
                        btnOrdenPrestamo.setSelected(true);
                        btnOrdenPrestamoInsertar.setSelected(permisosRolU.getInsertar());
                        btnOrdenPrestamoEditar.setSelected(permisosRolU.getEditar());
                        btnOrdenPrestamoVer.setSelected(permisosRolU.getVer());
                        break;
                    case "Usuario":
                        btnUsuario.setSelected(true);
                        btnUsuarioInsertar.setSelected(permisosRolU.getInsertar());
                        btnUsuarioEditar.setSelected(permisosRolU.getEditar());
                        btnUsuarioVer.setSelected(permisosRolU.getVer());
                        break;
                    case "Rol":
                        btnRoles.setSelected(true);
                        btnRolesInsertar.setSelected(permisosRolU.getInsertar());
                        btnRolesEditar.setSelected(permisosRolU.getEditar());
                        btnRolesVer.setSelected(permisosRolU.getVer());
                        break;
                    case "Genero":
                        btnGenero.setSelected(true);
                        btnGeneroInsertar.setSelected(permisosRolU.getInsertar());
                        btnGeneroEditar.setSelected(permisosRolU.getEditar());
                        btnGeneroVer.setSelected(permisosRolU.getVer());
                        break;
                    case "OrdenCompra":
                        btnOrdenCompra.setSelected(true);
                        btnOrdenCompraInsertar.setSelected(permisosRolU.getInsertar());
                        btnOrdenCompraEditar.setSelected(permisosRolU.getEditar());
                        btnOrdenCompraVer.setSelected(permisosRolU.getVer());
                        break;
                }
            }
        }
    }

    public void mostrarElementos(RolUsuario parametroRolUsuario) {
        rolUsuario = new RolUsuario();
        usuario = new Usuario();
        rolUsuario = parametroRolUsuario;
        usuario = rolUsuario.getUsuarioId();
        entUsuario.setText(usuario.getUsuario());
        entRol.setText(rolUsuario.getNombrerol());
        entFechaRegistro.setDate(rolUsuario.getFechacreacion());
        List<Permisos> permisos;
        MC_Permisos controlPermiso = new MC_Permisos();
        permisos = controlPermiso.buscarPermisosRolId(parametroRolUsuario.getId());
        if (!permisos.isEmpty()) {
            mostrarPermisos(permisos);
        }
    }

    public List<Permisos> getPermisosRol() {
        return permisosRol;
    }

    public void setPermisosRol(List<Permisos> permisosRol) {
        this.permisosRol = permisosRol;
    }

    public Usuario getUsuario() {
        return usuario;
    }

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    public RolUsuario getRolUsuario() {
        return rolUsuario;
    }

    public void setRolUsuario(RolUsuario rolUsuario) {
        this.rolUsuario = rolUsuario;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ventanaRoles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ventanaRoles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ventanaRoles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ventanaRoles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ventanaRoles dialog = new ventanaRoles(new javax.swing.JDialog(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton btnCliente;
    private javax.swing.JRadioButton btnClienteEditar;
    private javax.swing.JRadioButton btnClienteInsertar;
    private javax.swing.JRadioButton btnClienteVer;
    public javax.swing.JButton btnEditar;
    private javax.swing.JRadioButton btnEmpleado;
    private javax.swing.JRadioButton btnEmpleadoEditar;
    private javax.swing.JRadioButton btnEmpleadoInsertar;
    private javax.swing.JRadioButton btnEmpleadoVer;
    private javax.swing.JRadioButton btnGenero;
    private javax.swing.JRadioButton btnGeneroEditar;
    private javax.swing.JRadioButton btnGeneroInsertar;
    private javax.swing.JRadioButton btnGeneroVer;
    public javax.swing.JButton btnGuardar;
    private javax.swing.JRadioButton btnLibro;
    private javax.swing.JRadioButton btnLibroEditar;
    private javax.swing.JRadioButton btnLibroInsertar;
    private javax.swing.JRadioButton btnLibroVer;
    private javax.swing.JRadioButton btnOrdenCompra;
    private javax.swing.JRadioButton btnOrdenCompraEditar;
    private javax.swing.JRadioButton btnOrdenCompraInsertar;
    private javax.swing.JRadioButton btnOrdenCompraVer;
    private javax.swing.JRadioButton btnOrdenPrestamo;
    private javax.swing.JRadioButton btnOrdenPrestamoEditar;
    private javax.swing.JRadioButton btnOrdenPrestamoInsertar;
    private javax.swing.JRadioButton btnOrdenPrestamoVer;
    private javax.swing.JRadioButton btnRoles;
    private javax.swing.JRadioButton btnRolesEditar;
    private javax.swing.JRadioButton btnRolesInsertar;
    private javax.swing.JRadioButton btnRolesVer;
    private javax.swing.JRadioButton btnUsuario;
    private javax.swing.JRadioButton btnUsuarioEditar;
    private javax.swing.JRadioButton btnUsuarioInsertar;
    private javax.swing.JRadioButton btnUsuarioVer;
    public com.toedter.calendar.JDateChooser entFechaRegistro;
    private javax.swing.JTextField entRol;
    private javax.swing.JTextField entUsuario;
    private javax.swing.JPanel fondoCliente;
    private javax.swing.JPanel fondoEmpleado;
    private javax.swing.JPanel fondoGenero;
    private javax.swing.JPanel fondoLibro;
    private javax.swing.JPanel fondoOrdenCompra;
    private javax.swing.JPanel fondoOrdenPrestamo;
    private javax.swing.JPanel fondoPermisos;
    private javax.swing.JPanel fondoRoles;
    private javax.swing.JPanel fondoUsuario;
    private javax.swing.JLabel foto;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    // End of variables declaration//GEN-END:variables
}
